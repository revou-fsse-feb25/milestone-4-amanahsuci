// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String?
  email     String    @unique
  password  String
  role      String    @default("customer")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @default(now()) @map("updated_at")

  accounts  Account[]
}

model Account {
  id             Int           @id @default(autoincrement())
  userId         Int           @map("user_id")
  accountNumber  String        @unique @map("account_number")
  balance        Decimal       @default(0.00)
  createdAt      DateTime      @default(now()) @map("created_at")
  updatedAt      DateTime      @default(now()) @map("updated_at")

  user             User          @relation(fields: [userId], references: [id])
  fromTransactions Transaction[] @relation("FromAccount")
  toTransactions   Transaction[] @relation("ToAccount")
}

model Transaction {
  id             Int       @id @default(autoincrement())
  fromAccountId  Int?      @map("from_account_id")
  toAccountId    Int?      @map("to_account_id")
  amount         Decimal
  type           String
  status         String    @default("completed")
  description    String?
  createdAt      DateTime  @default(now()) @map("created_at")

  fromAccount    Account?  @relation("FromAccount", fields: [fromAccountId], references: [id])
  toAccount      Account?  @relation("ToAccount", fields: [toAccountId], references: [id])
}
